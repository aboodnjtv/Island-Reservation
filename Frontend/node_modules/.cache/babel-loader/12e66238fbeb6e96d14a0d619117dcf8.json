{"ast":null,"code":"var _jsxFileName = \"/Users/maiahpardo/Documents/Island-Reservation/Frontend/src/pages/Signup.js\";\nimport React from 'react';\nimport './Signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.signUp = () => {\n      fetch(\"http://localhost:5000/user/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n      }).then(this.fetchCheckStatus).then(response => response.json()).then(data => {\n        // this data can contain a json that says\n        // the user is signed up successfully (email dne already)\n        // all fields must be entered\n        console.log(data);\n      }).catch(error => {\n        window.alert(error);\n        return;\n      });\n    };\n\n    this.fetchCheckStatus = response => {\n      if (response.status >= 200 && response.status < 300) {\n        return Promise.resolve(response);\n      } else {\n        response.status = \"Transaction rejected ...\";\n        return Promise.reject(new Error(response));\n      }\n    };\n\n    this.state = {\n      fname: \"\",\n      lname: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  } // defining a method (arrow notation method)\n  // which automatically binds to 'this'\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xs-12 col-md-6 col-lg-4\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.signUp,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fname\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"fname\",\n                  value: this.state.fname,\n                  onChange: e => this.setState({\n                    fname: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lname\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"lname\",\n                  value: this.state.lname,\n                  onChange: e => this.setState({\n                    lname: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"E-mail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  value: this.state.email,\n                  onChange: e => this.setState({\n                    email: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  value: this.state.password,\n                  onChange: e => this.setState({\n                    password: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Sign Up\",\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/maiahpardo/Documents/Island-Reservation/Frontend/src/pages/Signup.js"],"names":["React","SignUp","Component","constructor","props","signUp","fetch","method","headers","body","JSON","stringify","state","then","fetchCheckStatus","response","json","data","console","log","catch","error","window","alert","status","Promise","resolve","reject","Error","fname","lname","email","password","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Signup.css'\n\n\nclass SignUp extends React.Component {\n  constructor(props) {\n  \t\tsuper(props);\n  \t\tthis.state = {\n  \t\t\tfname: \"\",\n  \t\t\tlname: \"\",\n  \t\t\temail: \"\",\n        password: \"\"\n  \t\t}\n  }\n\n  // defining a method (arrow notation method)\n  // which automatically binds to 'this'\n  signUp = () => {\n    fetch(\"http://localhost:5000/user/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.state),\n    })\n      .then(this.fetchCheckStatus)\n      .then(response => response.json())\n      .then(data => {\n          // this data can contain a json that says\n          // the user is signed up successfully (email dne already)\n          // all fields must be entered\n\n          console.log(data);\n      })\n      .catch(error => {\n        window.alert(error);\n        return;\n      });\n  };\n  fetchCheckStatus = (response) => {\n  \tif (response.status >= 200 && response.status < 300) {\n  \t\treturn Promise.resolve(response)\n  \t} else {\n  \t\tresponse.status = \"Transaction rejected ...\";\n  \t\treturn Promise.reject(new Error(response))\n  \t}\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h3>Sign Up</h3>\n        <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col-xs-12 col-md-6 col-lg-4\">\n        <form onSubmit={this.signUp}>\n          <div className=\"form-group\">\n            <label htmlFor=\"fname\">First Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"fname\"\n              value={this.state.fname}\n              onChange={(e) => this.setState({ fname: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lname\">Last Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"lname\"\n              value={this.state.lname}\n              onChange={(e) => this.setState({ lname: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">E-mail</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={(e) => this.setState({ email: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Sign Up\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n        </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}