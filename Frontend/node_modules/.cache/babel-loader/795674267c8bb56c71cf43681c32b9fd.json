{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abood\\\\Desktop\\\\school\\\\Year 2\\\\Quarter 3\\\\CSE 115A\\\\Island-Reservation\\\\Frontend\\\\src\\\\pages\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from '../components/Navbar.js';\nimport './Signup.css'; // Copy of Maiah's code, just changed from class component to functional component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const [form, setForm] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }); // For navigating to different page when signed up\n\n  let successSignup = false;\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    }; // When submit pressed, make api call\n\n    await fetch(\"http://localhost:5000/user/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).then(response => {\n      // If the HTTP response is 2xx then response.ok will have a value of true\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      } else {\n        successSignup = true;\n      }\n    }).catch(error => {\n      window.alert(error);\n      return;\n    }); // Navigate to signin page if signup success\n\n    if (successSignup) {\n      navigate(\"/user/signin\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      page: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-5 col-md-6 col-xs-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"border shadow-sm rounded p-3 mb-3\",\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fname\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"fname\",\n                  value: form.firstname,\n                  onChange: e => updateForm({\n                    firstname: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lname\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"lname\",\n                  value: form.lastname,\n                  onChange: e => updateForm({\n                    lastname: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"uname\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"uname\",\n                  value: form.username,\n                  onChange: e => updateForm({\n                    username: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"E-mail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  value: form.email,\n                  onChange: e => updateForm({\n                    email: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  value: form.password,\n                  onChange: e => updateForm({\n                    password: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Sign Up\",\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"sIayiTIrDrJUiWYKiCOtDzCrspM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Abood/Desktop/school/Year 2/Quarter 3/CSE 115A/Island-Reservation/Frontend/src/pages/Signup.js"],"names":["React","useState","useNavigate","Navbar","SignUp","form","setForm","firstname","lastname","username","email","password","successSignup","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","catch","error","window","alert","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Navbar from '../components/Navbar.js';\r\nimport './Signup.css';\r\n\r\n// Copy of Maiah's code, just changed from class component to functional component\r\nexport default function SignUp() {\r\n  const [form, setForm] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // For navigating to different page when signed up\r\n  let successSignup = false;\r\n  const navigate = useNavigate();\r\n  \r\n  // These methods will update the state properties.\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n  \r\n  // This function will handle the submission.\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n  \r\n    // When a post request is sent to the create url, we'll add a new record to the database.\r\n    const newPerson = { ...form };\r\n\r\n    // When submit pressed, make api call\r\n    await fetch(\"http://localhost:5000/user/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newPerson),\r\n    })\r\n    .then(response => {\r\n      // If the HTTP response is 2xx then response.ok will have a value of true\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText)\r\n      } else {\r\n        successSignup = true;\r\n      }\r\n    })\r\n    .catch(error => {\r\n      window.alert(error);\r\n      return;\r\n    });\r\n\r\n    // Navigate to signin page if signup success\r\n    if(successSignup){\r\n      navigate(\"/user/signin\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Navbar page=\"Signup\"/>\r\n      <div className=\"container\">\r\n        <h3>Sign Up</h3>\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n        {/* bootstrap responsive design\r\n          width of  columns on a 12 column grid:\r\n          for xs (mobile) sign up takes whole screen (12 cols)\r\n          for med page size, sign up takes 6 columns\r\n          for large page size, sign up takes 5 cols\r\n          */}\r\n        <div className=\"col-lg-5 col-md-6 col-xs-12\">\r\n        <form className=\"border shadow-sm rounded p-3 mb-3\" onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"fname\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"fname\"\r\n              value={form.firstname}\r\n              onChange={(e) => updateForm({ firstname: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lname\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"lname\"\r\n              value={form.lastname}\r\n              onChange={(e) => updateForm({ lastname: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"uname\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"uname\"\r\n              value={form.username}\r\n              onChange={(e) => updateForm({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">E-mail</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              value={form.email}\r\n              onChange={(e) => updateForm({ email: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              value={form.password}\r\n              onChange={(e) => updateForm({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Sign Up\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}