{"ast":null,"code":"var _jsxFileName = \"/Users/maiahpardo/Documents/Island-Reservation/Frontend/src/pages/Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from '../components/Navbar.js';\nimport './Signin.css'; // Copy of Maiah's code, just changed from class component to functional component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  }); // For navigating to different page when signed in\n\n  let successSignin = false;\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    }; // When submit pressed, make api call\n\n    await fetch(\"http://localhost:5000/user/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).then(response => {\n      // If the HTTP response is 2xx then response.ok will have a value of true\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      } else {\n        successSignin = true; // we have an ok from the backend, so we are authenticated (signed in)\n        // either pass the \"isAuthenticated\" key OR a userJSON object inside of response\n        //localStorage.setItem(response.userJson);\n        // each time we navigate to a new page check local storage again\n        // to make sure user is signed in\n\n        sessionStorage.setItem(\"isAuthenticated\", true);\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(JSON.stringify(data));\n    }).catch(error => {\n      window.alert(error);\n      return;\n    }); // Navigate to user homepage if signin success (Should be own user profile)\n\n    if (successSignin) {\n      window.location.href = \"/userhome\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      page: \"Signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-5 col-md-6 col-xs-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"border shadow-sm rounded p-3 mb-3\",\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"E-mail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  value: form.email,\n                  onChange: e => updateForm({\n                    email: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  value: form.password,\n                  onChange: e => updateForm({\n                    password: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Sign In\",\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"pcXDQm0sZ15zDCpsKdcn5N9FZx0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/maiahpardo/Documents/Island-Reservation/Frontend/src/pages/Signin.js"],"names":["React","useState","useNavigate","Navbar","SignIn","form","setForm","email","password","successSignin","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","sessionStorage","setItem","json","data","console","log","catch","error","window","alert","location","href","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from '../components/Navbar.js';\nimport './Signin.css';\n\n// Copy of Maiah's code, just changed from class component to functional component\nexport default function SignIn() {\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  // For navigating to different page when signed in\n  let successSignin= false;\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    // When submit pressed, make api call\n    await fetch(\"http://localhost:5000/user/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    .then(response => {\n      // If the HTTP response is 2xx then response.ok will have a value of true\n      if (!response.ok) {\n        throw new Error(response.statusText)\n      } else {\n        successSignin = true;\n        // we have an ok from the backend, so we are authenticated (signed in)\n        // either pass the \"isAuthenticated\" key OR a userJSON object inside of response\n        //localStorage.setItem(response.userJson);\n        // each time we navigate to a new page check local storage again\n        // to make sure user is signed in\n        sessionStorage.setItem(\"isAuthenticated\", true);\n      }\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(JSON.stringify(data));\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    // Navigate to user homepage if signin success (Should be own user profile)\n    if(successSignin){\n      window.location.href = \"/userhome\";\n    }\n  }\n\n  return (\n    <div>\n    <Navbar  page=\"Signin\"/>\n      <div className=\"container\">\n        <h3>Sign in</h3>\n        <div className=\"container\">\n        <div className=\"row\">\n        {/* bootstrap responsive design\n          width of  columns on a 12 column grid:\n          for xs (mobile) sign up takes whole screen (12 cols)\n          for med page size, sign up takes 6 columns\n          for large page size, sign up takes 5 cols\n          */}\n        <div className=\"col-lg-5 col-md-6 col-xs-12\">\n        <form className=\"border shadow-sm rounded p-3 mb-3\" onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">E-mail</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"email\"\n              value={form.email}\n              onChange={(e) => updateForm({ email: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              value={form.password}\n              onChange={(e) => updateForm({ password: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Sign In\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n        </div>\n        </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n"]},"metadata":{},"sourceType":"module"}