{"ast":null,"code":"var _jsxFileName = \"/Users/maiahpardo/Documents/Island-Reservation/Frontend/src/pages/AddCredit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from '../components/Navbar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddCredit() {\n  _s();\n\n  const [form, setForm] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    cardnum: \"\",\n    expdate: \"\",\n    cvc: \"\",\n    addamount: \"\"\n  }); // For navigating to different page when signed up\n\n  let successSignup = false;\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    }; // When submit pressed, make api call\n\n    await fetch(\"http://localhost:5000/user/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).then(async response => {\n      // If the HTTP response is 2xx then response.ok will have a value of true\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.message); // throw new Error(response.statusText)\n      } else {\n        successSignup = true;\n      }\n    }).catch(error => {\n      window.alert(error);\n      return;\n    }); // Navigate to signin page if signup success\n\n    if (successSignup) {\n      navigate(\"/user/signin\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      page: \"Add Credit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Credit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-5 col-md-6 col-xs-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"border shadow-sm rounded p-3 mb-3\",\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fname\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"fname\",\n                  value: form.firstname,\n                  onChange: e => updateForm({\n                    firstname: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lname\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"lname\",\n                  value: form.lastname,\n                  onChange: e => updateForm({\n                    lastname: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cardnum\",\n                  children: \"Credit Card Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"tel\",\n                  inputmode: \"numeric\",\n                  pattern: \"[0-9\\\\s]{13,19}\",\n                  autocomplete: \"cc-number\",\n                  maxlength: \"19\",\n                  placeholder: \"xxxx xxxx xxxx xxxx\",\n                  className: \"form-control\",\n                  id: \"cardnum\",\n                  value: form.cardnum,\n                  onChange: e => updateForm({\n                    cardnum: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"mmyy\",\n                  children: \"Expiration Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"month\",\n                  className: \"form-control\",\n                  id: \"mmyy\",\n                  value: form.expdate,\n                  onChange: e => updateForm({\n                    expdate: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cvc\",\n                  children: \"CVC Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  max: \"999\",\n                  pattern: \"([0-9]|[0-9]|[0-9])\",\n                  className: \"form-control\",\n                  id: \"cvc\",\n                  value: form.cvc,\n                  onChange: e => updateForm({\n                    cvc: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"amount\",\n                  children: \"Amount (USD)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0.01\",\n                  max: \"1000000000.00\",\n                  step: \"0.01\",\n                  className: \"form-control\",\n                  id: \"amount\",\n                  value: form.addamount,\n                  onChange: e => updateForm({\n                    addamount: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Add to Balance\",\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCredit, \"pmS7Y8arpgowjdisKfc/3/glXQ4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddCredit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCredit\");","map":{"version":3,"sources":["/Users/maiahpardo/Documents/Island-Reservation/Frontend/src/pages/AddCredit.js"],"names":["React","useState","useNavigate","Navbar","AddCredit","form","setForm","firstname","lastname","cardnum","expdate","cvc","addamount","successSignup","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","then","response","ok","data","json","Error","message","catch","error","window","alert","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from '../components/Navbar.js';\n\n\n\nexport default function AddCredit() {\n  const [form, setForm] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    cardnum: \"\",\n    expdate: \"\",\n    cvc: \"\",\n    addamount: \"\"\n  });\n  // For navigating to different page when signed up\n  let successSignup = false;\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    // When submit pressed, make api call\n    await fetch(\"http://localhost:5000/user/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    .then(async response => {\n      // If the HTTP response is 2xx then response.ok will have a value of true\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.message);\n        // throw new Error(response.statusText)\n      } else {\n        successSignup = true;\n      }\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    // Navigate to signin page if signup success\n    if(successSignup){\n      navigate(\"/user/signin\")\n    }\n  }\n\n  return (\n    <div>\n    <Navbar page=\"Add Credit\"/>\n      <div className=\"container\">\n        <h3>Add Credit</h3>\n        <div className=\"container\">\n        <div className=\"row\">\n        {/* bootstrap responsive design\n          width of  columns on a 12 column grid:\n          for xs (mobile) sign up takes whole screen (12 cols)\n          for med page size, sign up takes 6 columns\n          for large page size, sign up takes 5 cols\n          */}\n        <div className=\"col-lg-5 col-md-6 col-xs-12\">\n        <form className=\"border shadow-sm rounded p-3 mb-3\" onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"fname\">First Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"fname\"\n              value={form.firstname}\n              onChange={(e) => updateForm({ firstname: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lname\">Last Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"lname\"\n              value={form.lastname}\n              onChange={(e) => updateForm({ lastname: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"cardnum\">Credit Card Number</label>\n            <input\n              type=\"tel\"\n              inputmode=\"numeric\"\n              pattern=\"[0-9\\s]{13,19}\"\n              autocomplete=\"cc-number\"\n              maxlength=\"19\"\n              placeholder=\"xxxx xxxx xxxx xxxx\"\n              className=\"form-control\"\n              id=\"cardnum\"\n              value={form.cardnum}\n              onChange={(e) => updateForm({ cardnum: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"mmyy\">Expiration Date</label>\n            <input\n              type=\"month\"\n              className=\"form-control\"\n              id=\"mmyy\"\n              value={form.expdate}\n              onChange={(e) => updateForm({ expdate: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"cvc\">CVC Number</label>\n            <input\n              type=\"number\"\n              max=\"999\"\n              pattern=\"([0-9]|[0-9]|[0-9])\"\n              className=\"form-control\"\n              id=\"cvc\"\n              value={form.cvc}\n              onChange={(e) => updateForm({ cvc: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"amount\">Amount (USD)</label>\n            <input\n              type=\"number\"\n              min=\"0.01\"\n              max=\"1000000000.00\"\n              step=\"0.01\"\n              className=\"form-control\"\n              id=\"amount\"\n              value={form.addamount}\n              onChange={(e) => updateForm({ addamount: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Add to Balance\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n        </div>\n        </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n"]},"metadata":{},"sourceType":"module"}